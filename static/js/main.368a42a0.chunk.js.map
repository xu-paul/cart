{"version":3,"sources":["components/ProductList.js","utils/utils.js","components/Cart.js","components/App.js","api/shop.js","models/products.js","models/cart.js","index.js"],"names":["connect","_ref","byId","result","products","map","id","dispatch","addToCart","type","payload","props","list","item","key","react_default","a","createElement","className","src","alt","title","price","inventory","es_button","onClick","disabled","cart","loading","added","Object","objectSpread2","quantity","quantities","subtotal","reduce","amount","toFixed","models","checking","effects","onCheckout","nodes","style","color","App","this","Header","Layout","Footer","Content","textAlign","layout","src_components_ProductList","src_components_Cart","React","Component","shop","axios","get","Promise","resolve","reject","setTimeout","schema","Entity","models_products","namespace","state","query","regenerator_default","mark","action","call","put","res","wrap","_context","prev","next","sent","normalize","data","stop","reducers","setProducts","_ref2","entities","decInventory","_ref3","selected","defineProperty","initialState","models_cart","add","select","product","console","log","checkout","_ref4","_context2","_ref5","includes","toConsumableArray","concat","checkoutCompleted","app","dva","model","use","createLoading","router","src_components_App","start"],"mappings":"iUA2CeA,kCAZS,SAAAC,GAAA,IC9BNC,EAAMC,ED8BEC,EAAFH,EAAEG,SAAF,MAAiB,CACvCA,UC/BgBF,ED+BJE,EAASF,KC/BCC,ED+BKC,EAASD,OC/BHA,EAAOE,IAAI,SAAAC,GAAE,OAAIJ,EAAKI,QDkC9B,SAACC,GAAD,MAAe,CACxCC,UAAW,SAACF,GAAD,OAAQC,EAAS,CAC1BE,KAAM,WACNC,QAAS,CACPJ,WAISN,CArCK,SAAAW,GAAS,IACnBP,EAAwBO,EAAxBP,SAAUI,EAAcG,EAAdH,UACZI,GAAQR,GAAY,IAAIC,IAAI,SAACQ,EAAMC,GAAP,OAChCC,EAAAC,EAAAC,cAAA,MAAIH,IAAKA,GACPC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKN,EAAKM,IAAKC,IAAI,KACxBL,EAAAC,EAAAC,cAAA,YAAOJ,EAAKQ,OAAc,IAC1BN,EAAAC,EAAAC,cAAA,gBAAQJ,EAAKS,OAAc,IAC3BP,EAAAC,EAAAC,cAAA,gBAAQJ,EAAKU,YAEfR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQf,KAAK,UAAUgB,QAAS,kBAAMjB,EAAUK,EAAKP,KAAKoB,UAAWb,EAAKU,WAA1E,sCAIN,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACXN,eEaMZ,4BAZS,SAAAC,GAAA,IAAE0B,EAAF1B,EAAE0B,KAAMvB,EAARH,EAAQG,SAAUwB,EAAlB3B,EAAkB2B,QAAlB,MAAgC,CACtDxB,SAAUuB,EAAKE,MAAMxB,IAAI,SAAAC,GAAE,OAAAwB,OAAAC,EAAA,EAAAD,CAAA,GAAS1B,EAASF,KAAKI,GAAvB,CAA4B0B,SAAUL,EAAKM,WAAW3B,OACjF4B,SAAUP,EAAKE,MAAMM,OAAO,SAACC,EAAQ9B,GAAT,OAAgBF,EAASF,KAAKI,GAAIgB,MAAQK,EAAKM,WAAW3B,GAAM8B,GAAQ,GAAGC,QAAQ,GAC/GT,QAASA,EAAQU,OAAR,KACTC,SAAUX,EAAQY,QAAQ,mBAGD,SAACjC,GAAD,MAAe,CACxCkC,WAAY,kBAAMlC,EAAS,CACzBE,KAAM,qBAGKT,CAhCF,SAAAW,GAAS,IACZP,EAAsDO,EAAtDP,SAAU8B,EAA4CvB,EAA5CuB,SAAUO,EAAkC9B,EAAlC8B,WAAYb,EAAsBjB,EAAtBiB,QAASW,EAAa5B,EAAb4B,SAC3CG,EAAQtC,EAASC,IAAI,SAACQ,EAAMC,GAAP,OACzBC,EAAAC,EAAAC,cAAA,MAAIH,IAAKA,GACPC,EAAAC,EAAAC,cAAA,OAAKE,IAAKN,EAAKM,IAAKC,IAAI,KAAKP,EAAKQ,MADpC,MAC8CR,EAAKS,MADnD,MAC6DT,EAAKmB,YAGpE,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAawB,GAC3B3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,UAA+BgB,GAC/BnB,EAAAC,EAAAC,cAAA,WACGsB,GAAYxB,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,CAACC,MAAO,QAApB,gBACb7B,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAQf,KAAK,SAASgB,QAASgB,EAAYf,SAAUQ,GAAY,GAAQN,GAAzE,0BCXFiB,uMAIEtC,EAFqBuC,KAAKnC,MAAlBJ,UAEC,CACLE,KAAK,oDAGH,IACEsC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QACxB,OAAOnC,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,CAACQ,UAAU,WAE9BpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,KACFrC,EAAAC,EAAAC,cAAC8B,EAAD,KAAQhC,EAAAC,EAAAC,cAAA,4BACRF,EAAAC,EAAAC,cAACiC,EAAD,KAASnC,EAAAC,EAAAC,cAACoC,EAAD,OACTtC,EAAAC,EAAAC,cAACgC,EAAD,SAASlC,EAAAC,EAAAC,cAACqC,EAAD,gBAfGC,IAAMC,YAqBTxD,sBAAU6C,sDCzBVY,EACA,kBAAMC,IAAMC,IAAI,oBADhBF,EAEA,SAAC/C,GAAD,OAAa,IAAIkD,QAAQ,SAACC,EAASC,GAAV,OAAqBC,WAAW,kBAAMF,EAAQnD,IAAU,QCC1FN,EAAW,IAAI4D,IAAOC,OAAO,YAEpBC,EAAA,CACbC,UAAW,WACXC,MAAO,CACLjE,OAAQ,GACRD,KAAM,IAERsC,QAAS,CACN6B,MADMC,EAAAtD,EAAAuD,KAAA,SAAAF,EACAG,EADAvE,GAAA,IAAAwE,EAAAC,EAAAC,EAAA,OAAAL,EAAAtD,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEO,OADGN,EADVxE,EACUwE,KAAMC,EADhBzE,EACgByE,IADhBG,EAAAE,KAAA,EAEaN,EAAKhB,GAFlB,OAGL,OADMkB,EAFDE,EAAAG,KAAAH,EAAAE,KAAA,EAGCL,EAAI,CACRjE,KAAM,cACNC,QAASuE,YAAUN,EAAIO,KAAM,CAAC9E,MAL3B,wBAAAyE,EAAAM,SAAAd,MASTe,SAAU,CACRC,YAAa,SAACjB,EAADkB,GAAwB,IAAd5E,EAAc4E,EAAd5E,QACrB,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACFsC,EADL,CAEElE,KAAMQ,EAAQ6E,SAASnF,SACvBD,OAAQO,EAAQP,UAGpBqF,aAAc,SAACpB,EAADqB,GAAgC,IAAXnF,EAAWmF,EAAtB/E,QAAWJ,GAC3BoF,EAAWtB,EAAMlE,KAAKI,GAC5B,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GACFsC,EADL,CAEElE,KAAK4B,OAAAC,EAAA,EAAAD,CAAA,GACAsC,EAAMlE,KADP4B,OAAA6D,EAAA,EAAA7D,CAAA,GAEDxB,EAFCwB,OAAAC,EAAA,EAAAD,CAAA,GAES4D,EAFT,CAEmBnE,UAAWmE,EAASnE,UAAY,mBCrCzDqE,EAAe,CACjB/D,MAAO,GACPI,WAAY,IAGD4D,EAAA,CACb1B,UAAW,OACXC,MAAOwB,EACPpD,QAAS,CACNsD,IADMxB,EAAAtD,EAAAuD,KAAA,SAAAuB,EAAA7F,EAAAqF,GAAA,IAAAhF,EAAAoE,EAAAqB,EAAAC,EAAA,OAAA1B,EAAAtD,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEW,OADDzE,EADVL,EACDS,QAAWJ,GADVgF,EACmBb,KAAMC,EADzBY,EACyBZ,IAAKqB,EAD9BT,EAC8BS,OAD9BlB,EAAAE,KAAA,EAEiBgB,EAAO,SAAA3B,GAAK,OAAIA,EAAMhE,SAASF,KAAKI,KAFrD,UAEC0F,EAFDnB,EAAAG,KAGLiB,QAAQC,IAAI,UAAWF,KACnBA,EAAQzE,UAAY,GAJnB,CAAAsD,EAAAE,KAAA,SAKH,OALGF,EAAAE,KAAA,EAKGL,EAAI,CACRjE,KAAM,wBACNC,QAAS,CACPJ,QARD,OAWH,OAXGuE,EAAAE,KAAA,GAWGL,EAAI,CACRjE,KAAM,YACNC,QAAS,CACPJ,QAdD,yBAAAuE,EAAAM,SAAAW,KAmBNK,SAnBM7B,EAAAtD,EAAAuD,KAAA,SAAA4B,EAmBG3B,EAnBHiB,GAAA,IAAAhB,EAAAC,EAAAqB,EAAAK,EAAAzE,EAAAgD,EAAA,OAAAL,EAAAtD,EAAA4D,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OAoBY,OADAN,EAnBZgB,EAmBYhB,KAAMC,EAnBlBe,EAmBkBf,IAAKqB,EAnBvBN,EAmBuBM,OAnBvBM,EAAAtB,KAAA,EAoBkBgB,IApBlB,OAsBO,OAtBPK,EAAAC,EAAArB,KAoBGrD,EApBHyE,EAoBGzE,KACRsE,QAAQC,IAAI,gBAAiBvE,GArBxB0E,EAAAtB,KAAA,EAsBaN,EAAKhB,EAAkB9B,GAtBpC,OAuBL,OADMgD,EAtBD0B,EAAArB,KAAAqB,EAAAtB,KAAA,GAuBCL,EAAI,CACRjE,KAAM,oBACNC,QAASiE,IAzBN,yBAAA0B,EAAAlB,SAAAgB,MA6BTf,SAAU,CACR5E,UAAW,SAAC4D,EAADkC,GAAgC,IAAXhG,EAAWgG,EAAtB5F,QAAWJ,GAC9B,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GACFsC,EADL,CAEEvC,MAAOuC,EAAMvC,MAAM0E,SAASjG,GAArBwB,OAAA0E,EAAA,EAAA1E,CAA+BsC,EAAMvC,OAArC,GAAA4E,OAAA3E,OAAA0E,EAAA,EAAA1E,CAAkDsC,EAAMvC,OAAxD,CAA+DvB,IACtE2B,WAAWH,OAAAC,EAAA,EAAAD,CAAA,GACNsC,EAAMnC,WADDH,OAAA6D,EAAA,EAAA7D,CAAA,GAEPxB,GAAM8D,EAAMnC,WAAW3B,IAAO,GAAK,OAI1CoG,kBAAmB,kBAAMd,KC3CvBe,EAAMC,MACZD,EAAIE,MAAMzG,GACVuG,EAAIE,MAAMlF,GACVgF,EAAIG,IAAIC,eACRJ,EAAIK,OAAO,kBAAMjG,EAAAC,EAAAC,cAACgG,EAAD,QACjBN,EAAIO,MAAM","file":"static/js/main.368a42a0.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'dva';\nimport { d } from '../utils/utils';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './ProductList.css';\nconst ProductList = props => {\n  const { products, addToCart } = props;\n  const list = (products || []).map((item, key) => (\n    <li key={key}>\n      <div className='pname'>\n        <img src={item.src} alt=\"\"/>\n        <span>{item.title}</span>{'-'}\n        <span>${item.price}</span>{' '}\n        <span>x{item.inventory}</span>\n      </div>\n      <div>\n        <Button type=\"primary\" onClick={() => addToCart(item.id)} disabled={!item.inventory}>添加购物车</Button>\n      </div>\n    </li>\n  ));\n  return (\n    <div>\n      <h1>Products</h1>\n      <ul className='item'>\n        {list}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({products}) => ({\n  products: d(products.byId, products.result)\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  addToCart: (id) => dispatch({\n    type: 'cart/add',\n    payload: {\n      id\n    }\n  })\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);\n","\nexport const d = (byId, result) => result.map(id => byId[id])\n","import React from 'react';\nimport { connect } from 'dva';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport './Cart.css'\n\nconst Cart = props => {\n  const { products, subtotal, onCheckout, loading, checking } = props;\n  const nodes = products.map((item, key) => (\n    <li key={key}>\n      <img src={item.src} alt=\"\"/>{item.title}-$ {item.price} x {item.quantity} \n    </li>\n  ));\n  return (\n    <div>\n      <h1 className='cart-title'>Your Cart</h1>\n      <ul className='cart-item'>{nodes}</ul>\n      <div className='total'>Total: {subtotal}</div>\n      <div>\n        {checking && <div style={{color: 'red'}}>Checking ...</div>}\n        <Button type='danger' onClick={onCheckout} disabled={subtotal <= 0.00 || loading}>Checkout</Button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({cart, products, loading}) => ({\n  products: cart.added.map(id => ({...products.byId[id], quantity: cart.quantities[id]})),\n  subtotal: cart.added.reduce((amount, id) => products.byId[id].price * cart.quantities[id] + amount, 0).toFixed(2),\n  loading: loading.models['cart'],\n  checking: loading.effects['cart/checkout']\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onCheckout: () => dispatch({\n    type: 'cart/checkout'\n  })\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport { connect } from 'dva';\n//import { getAllProducts } from '../reducers/products';\nimport ProductList from './ProductList';\nimport Cart from './Cart';\nimport { Layout } from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css'\n\nclass App extends React.Component {\n    componentDidMount () {\n        const { dispatch } = this.props;\n\n        dispatch({\n            type:'products/query'\n        });\n    }\n    render () {\n        const { Header, Footer, Content } = Layout;\n        return <div style={{textAlign:'center'}}>\n      \n        <Layout>\n      <Header><h1>Shopping-Cart</h1></Header>\n      <Content><ProductList/></Content>\n      <Footer> <Cart/></Footer>\n       </Layout>\n        </div>\n    }\n}\n\nexport default connect()(App);\n","/**\n * Mocking client-server processing\n */\nimport axios from 'axios'\n\nexport default {\n  getProducts: () => axios.get('./products.json'),\n  buyProducts: (payload) => new Promise((resolve, reject) => setTimeout(() => resolve(payload), 2000)) //只是为了模拟axios.post的效果\n}\n","import { normalize, schema } from \"normalizr\";\n\nimport shop from \"../api/shop\";\n\n// 关于normalizr库，与官方示例直接用byId, allIds去组织还别扭\n// 此处仅仅是为了尝试下引入这个库的效果，它的用法还有待深入\n// 但是不论哪一种写法，无揭示了一个问题，如果state需要相关引用，\n// 根据ID组织状态是一个合理的方式。\nconst products = new schema.Entity(\"products\");\n\nexport default {\n  namespace: \"products\",\n  state: {\n    result: [],\n    byId: {}\n  },\n  effects: {\n    *query(action, { call, put }) {\n      const res = yield call(shop.getProducts);\n      yield put({\n        type: \"setProducts\",\n        payload: normalize(res.data, [products])\n      });\n    }\n  },\n  reducers: {\n    setProducts: (state, { payload }) => {\n      return {\n        ...state,\n        byId: payload.entities.products,\n        result: payload.result\n      };\n    },\n    decInventory: (state, { payload: { id } }) => {\n      const selected = state.byId[id];\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [id]: { ...selected, inventory: selected.inventory - 1 }\n        }\n      };\n    }\n  }\n};\n","import shop from \"../api/shop\";\n\nconst initialState = {\n    added: [],\n    quantities: {\n    }\n  }\nexport default {\n  namespace: \"cart\",\n  state: initialState,\n  effects: {\n    *add({payload: { id }}, { call, put, select }) {\n      const product = yield select(state => state.products.byId[id]);\n      console.log('product', product);\n      if (product.inventory > 0) {\n        yield put({\n          type: 'products/decInventory', \n          payload: {\n            id\n          }\n        })\n        yield put({\n          type: 'addToCart',\n          payload: {\n            id\n          }\n        })\n      }\n    },\n    *checkout(action, {call, put, select}) {\n      const { cart } = yield select();\n      console.log(\"checkout cart\", cart);\n      const res = yield call(shop.buyProducts, cart);\n      yield put({\n        type: \"checkoutCompleted\",\n        payload: res\n      });\n    }\n  },\n  reducers: {\n    addToCart: (state, { payload: { id } }) => {\n      return {\n        ...state,\n        added: state.added.includes(id) ? [...state.added] : [...state.added, id],\n        quantities: {\n          ...state.quantities,\n          [id]: (state.quantities[id] || 0) + 1\n        }\n      }\n    },\n    checkoutCompleted: () => initialState\n  }\n};\n\n","import React from 'react';\nimport dva from 'dva';\nimport createLoading from 'dva-loading';\nimport App from './components/App';\nimport products from './models/products';\nimport cart from './models/cart';\n\nconst app = dva();\napp.model(products);\napp.model(cart);\napp.use(createLoading());\napp.router(() => <App />);\napp.start('#root');\n"],"sourceRoot":""}